{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button, TextInput, Switch, PaperProvider } from \"react-native-paper\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    textUserName = _React$useState2[0],\n    setTextUserName = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textPassword = _React$useState4[0],\n    setTextPassword = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isSwitchOn = _React$useState6[0],\n    setIsSwitchOn = _React$useState6[1];\n  var onToggleSwitch = function onToggleSwitch() {\n    return setIsSwitchOn(!isSwitchOn);\n  };\n  var image = {\n    uri: \"https://imgur.com/XZyS6xS.png\"\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: image,\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.textInput,\n        children: [_jsx(TextInput, {\n          style: {\n            marginBottom: 10\n          },\n          label: \"Username\",\n          placeholder: \"vd : TonTapCode\",\n          placeholderTextColor: \"rgb(106, 100, 100)\",\n          value: textUserName,\n          onChangeText: function onChangeText(textUserName) {\n            return setTextUserName(textUserName);\n          },\n          right: _jsx(TextInput.Affix, {\n            text: \" 0/16\"\n          })\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"*******\",\n          maxLength: 8,\n          placeholderTextColor: \"rgb(106, 100, 100)\",\n          label: \"Password\",\n          value: textPassword,\n          onChangeText: function onChangeText(textPassword) {\n            return setTextPassword(textPassword);\n          }\n        })]\n      }), _jsx(Button, {\n        icon: \"login\",\n        mode: \"contained-tonal\",\n        onPress: function onPress() {\n          return alert(\"Xin chao \" + textUserName + \"\\n\" + \"Password: \" + textPassword);\n        },\n        children: \"Login\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ce33d6\"\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    color: \"white\",\n    marginBottom: 40\n  },\n  textInput: {\n    width: \"60%\",\n    marginVertical: 10,\n    alignItems: \"stretch\"\n  }\n});","map":{"version":3,"names":["Button","TextInput","Switch","PaperProvider","React","jsx","_jsx","jsxs","_jsxs","App","_React$useState","useState","_React$useState2","_slicedToArray","textUserName","setTextUserName","_React$useState3","_React$useState4","textPassword","setTextPassword","_React$useState5","_React$useState6","isSwitchOn","setIsSwitchOn","onToggleSwitch","image","uri","View","style","styles","container","children","ImageBackground","source","resizeMode","textInput","marginBottom","label","placeholder","placeholderTextColor","value","onChangeText","right","Affix","text","secureTextEntry","maxLength","icon","mode","onPress","alert","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","title","fontWeight","fontSize","color","width","marginVertical"],"sources":["C:/Users/doant/OneDrive/Máy tính/CHĂM CHỈ HỌC HÀNH/di động đa nền tảng/btaptrenlop/btaptrenlop/App.js"],"sourcesContent":["import { StyleSheet, Text, View, Alert, ImageBackground } from \"react-native\";\nimport {\n  Button,\n  TextInput,\n  Switch,\n  PaperProvider,\n} from \"react-native-paper\";\nimport React from \"react\";\n\nexport default function App() {\n  const [textUserName, setTextUserName] = React.useState(\"\");\n  const [textPassword, setTextPassword] = React.useState(\"\");\n  const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n  const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n  const image = { uri: \"https://imgur.com/XZyS6xS.png\" };\n\n  return (\n    <View style={styles.container}>\n      {/* <About /> */}\n      {/* <Switch \n        \n        onValueChange={onToggleSwitch}\n        value={isSwitchOn}\n      /> */}\n      <ImageBackground source={image} resizeMode=\"cover\" style={styles.image}>\n        {/* <Text style={styles.title}>Welcome To My App!</Text> */}\n        {/* <Avatar.Icon size={50} icon=\"cat\" /> */}\n        {/* <Avatar.Image\n          style={{ marginTop: 100 }}\n          size={100}\n          source={require(\"../assets/AvtTonDev.png\")}\n        /> */}\n        <View style={styles.textInput}>\n          <TextInput\n            style={{ marginBottom: 10 }}\n            label=\"Username\"\n            placeholder=\"vd : TonTapCode\"\n            placeholderTextColor=\"rgb(106, 100, 100)\"\n            value={textUserName}\n            onChangeText={(textUserName) => setTextUserName(textUserName)}\n            right={<TextInput.Affix text=\" 0/16\" />}\n          />\n          <TextInput\n            secureTextEntry={true}\n            placeholder=\"*******\"\n            maxLength={8}\n           // passwordRules=\"required: upper; required: lower; required: digit; max-consecutive: 2; maxlength: 8;\"\n            \n            //right={<TextInput.Icon icon=\"eye\" />}\n            placeholderTextColor=\"rgb(106, 100, 100)\"\n            label=\"Password\"\n            value={textPassword}\n            onChangeText={(textPassword) => setTextPassword(textPassword)}\n          />\n        </View>\n\n        <Button\n          icon=\"login\"\n          mode=\"contained-tonal\"\n          onPress={() => alert(\"Xin chao \" + textUserName +\"\\n\"+ \"Password: \"+ textPassword)}\n        >\n          Login\n        </Button>\n      </ImageBackground>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //justifyContent: \"center\",\n    //alignItems: \"center\",\n    backgroundColor: \"#ce33d6\",\n  },\n\n  image: {\n    //backgroundColor: \"#000\",\n    flex: 1,\n\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    color: \"white\",\n\n    marginBottom: 40,\n\n    // flex: 1,\n\n    //backgroundColor: \"#000\",\n  },\n\n  textInput: {\n    width: \"60%\",\n    marginVertical: 10,\n    //backgroundColor:\"green\",\n    //justifyContent: \"center\",\n    alignItems: \"stretch\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}